server:
  port: 8088

spring:
  application:
    name: gateway

  config:
    use-legacy-processing: true

  main.allow-bean-definition-overriding: true

  cloud:
    gateway:
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins:
              - "*"
            allowedMethods:
              - "*"
            allowedHeaders:
              - "*"

logging:
  level:
    root: WARN
    musicStreaming.gateway.custom: DEBUG

# JWT 설정 및 인증을 위한 Public & Private 키 경로
jwt:
  issuer: musicStreaming.io
  expire-after-seconds: 36000
  public.key: classpath:rsa.public.key

---

spring:
  profiles: host

  cloud:
    gateway:
      routes:
        - id: userAuthCheck
          uri: http://localhost:8082
          predicates:
            - Path=/api/user/sanityCheck/authenticationCheck
            - Method=GET
          filters:
            - RewritePath=/api/user/(?<segment>.*), /${segment}
            - AuthorizationHeaderFilter

        - id: userChangeName
          uri: http://localhost:8082
          predicates:
            - Path=/api/user/users/updateName
            - Method=PUT
          filters:
            - RewritePath=/api/user/(?<segment>.*), /${segment}
            - AuthorizationHeaderFilter

        - id: user
          uri: http://localhost:8082
          predicates:
            - Path=/api/user/**
          filters:
            - RewritePath=/api/user/(?<segment>.*), /${segment}


        - id: musicNoAuth
          uri: http://localhost:8083
          predicates:
            - Path=/api/music/musics,/api/music/sanityCheck
            - Method=GET
          filters:
            - RewritePath=/api/music/(?<segment>.*), /${segment}

        - id: musicRequireAuth
          uri: http://localhost:8083
          predicates:
            - Path=/api/music/**
          filters:
            - RewritePath=/api/music/(?<segment>.*), /${segment}
            - AuthorizationHeaderFilter
---

spring:
  profiles: docker

  cloud:
    gateway:
      routes:
        - id: userAuthCheck
          uri: http://host.docker.internal:8082
          predicates:
            - Path=/api/user/sanityCheck/authenticationCheck
            - Method=GET
          filters:
            - RewritePath=/api/user/(?<segment>.*), /${segment}
            - AuthorizationHeaderFilter

        - id: userChangeName
          uri: http://host.docker.internal:8082
          predicates:
            - Path=/api/user/users/updateName
            - Method=PUT
          filters:
            - RewritePath=/api/user/(?<segment>.*), /${segment}
            - AuthorizationHeaderFilter

        - id: user
          uri: http://host.docker.internal:8082
          predicates:
            - Path=/api/user/**
          filters:
            - RewritePath=/api/user/(?<segment>.*), /${segment}


        - id: musicNoAuth
          uri: http://host.docker.internal:8083
          predicates:
            - Path=/api/music/musics,/api/music/sanityCheck
            - Method=GET
          filters:
            - RewritePath=/api/music/(?<segment>.*), /${segment}

        - id: musicRequireAuth
          uri: http://host.docker.internal:8083
          predicates:
            - Path=/api/music/**
          filters:
            - RewritePath=/api/music/(?<segment>.*), /${segment}
            - AuthorizationHeaderFilter

---

spring:
  profiles: kubernates

  cloud:
    gateway:
      routes:
        - id: userAuthCheck
          uri: http://user:8080
          predicates:
            - Path=/api/user/sanityCheck/authenticationCheck
            - Method=GET
          filters:
            - RewritePath=/api/user/(?<segment>.*), /${segment}
            - AuthorizationHeaderFilter

        - id: userChangeName
          uri: http://user:8080
          predicates:
            - Path=/api/user/users/updateName
            - Method=PUT
          filters:
            - RewritePath=/api/user/(?<segment>.*), /${segment}
            - AuthorizationHeaderFilter

        - id: user
          uri: http://user:8080
          predicates:
            - Path=/api/user/**
          filters:
            - RewritePath=/api/user/(?<segment>.*), /${segment}


        - id: musicNoAuth
          uri: http://music:8080
          predicates:
            - Path=/api/music/musics,/api/music/sanityCheck
            - Method=GET
          filters:
            - RewritePath=/api/music/(?<segment>.*), /${segment}

        - id: musicRequireAuth
          uri: http://music:8080
          predicates:
            - Path=/api/music/**
          filters:
            - RewritePath=/api/music/(?<segment>.*), /${segment}
            - AuthorizationHeaderFilter